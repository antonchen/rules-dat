name: Build rules dat files
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *" # 6:30 AM UTC+8
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "GOAMD64=v3" >> $GITHUB_ENV
          echo "BUILDTIME=$(TZ=Asia/Shanghai date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV
          echo "GOOGLE_DOMAINS_URL=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/google.china.conf" >> $GITHUB_ENV
          echo "APPLE_DOMAINS_URL=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/apple.china.conf" >> $GITHUB_ENV
          echo "WIN_SPY=https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/spy.txt" >> $GITHUB_ENV
          echo "WIN_UPDATE=https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/update.txt" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: antonchen/rules-dat
          path: rules-dat

      - name: Build geosite-lite.dat file
        env:
          YAML_SED: grep DOMAIN | grep -v "#" | sed 's/ *- DOMAIN,/full:/g' | sed 's/ *- DOMAIN-SUFFIX,//g' | sed 's/ *- DOMAIN-KEYWORD,/keyword:/g'
          LIST_SED: grep DOMAIN | grep -v "#" | sed 's/ *DOMAIN,/full:/g' | sed 's/ *DOMAIN-SUFFIX,//g' | sed 's/ *DOMAIN-KEYWORD,/keyword:/g'
        run: |
          mkdir -p rules-dat/site
          cd rules-dat || exit 1
          curl -sSL $GOOGLE_DOMAINS_URL | perl -ne '/^server=\/([^\/]+)\// && print "full:$1\n"' > site/google-cn
          curl -sSL $APPLE_DOMAINS_URL | perl -ne '/^server=\/([^\/]+)\// && print "full:$1\n"' > site/apple-cn
          curl -sSL $WIN_SPY | grep "0.0.0.0" | awk '{print $2}' > site/win-spy
          curl -sSL $WIN_UPDATE | grep "0.0.0.0" | awk '{print $2}' > site/win-update

          curl -sSL https://github.com/v2fly/domain-list-community/raw/master/data/private > site/private

          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/ChinaMax/ChinaMax_Domain.txt | sed '/^\s*#/d' | sed '/^[^\.]/ s/^/full:/' |  sed 's/^\.\([^.]*\)/\1/' > site/cn
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/Netflix/Netflix.yaml | ${{ env.YAML_SED }} > site/netflix
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/OpenAI/OpenAI.yaml | ${{ env.YAML_SED }} > site/openai
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/OneDrive/OneDrive.yaml | ${{ env.YAML_SED }} > site/onedrive
          echo "sharepoint.cn" >> site/onedrive
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/Reddit/Reddit.yaml | ${{ env.YAML_SED }} > site/reddit
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/Telegram/Telegram.yaml | ${{ env.YAML_SED }} > site/telegram
          # Global Media
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/GlobalMedia/GlobalMedia_Classical.yaml | ${{ env.YAML_SED }} > site/global-media
          # Japan Media
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/DMM/DMM.yaml | ${{ env.YAML_SED }} > site/jp-media.tmp
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/Abema/Abema.yaml | ${{ env.YAML_SED }} > site/jp-media.tmp
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/Niconico/Niconico.yaml | ${{ env.YAML_SED }} > site/jp-media.tmp
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/HuluJP/HuluJP.yaml | ${{ env.YAML_SED }} > site/jp-media.tmp
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/TVer/TVer.yaml | ${{ env.YAML_SED }} > site/jp-media.tmp
          curl -sSL https://github.com/xuanranran/Clash/raw/main/yaml/Japan_Media.yaml | ${{ env.YAML_SED }} > site/jp-media.tmp
          sort site/jp-media.tmp | uniq > site/jp-media; rm -f site/jp-media.tmp

          curl -sSL https://github.com/DoingDog/rconvert/raw/main/static/serv/sharing.list | ${{ env.LIST_SED }} > site/high-traffic
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/MEGA/MEGA.list | ${{ env.LIST_SED }} >> site/high-traffic
          curl -sSL https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Loon/GoogleDrive/GoogleDrive.list | ${{ env.LIST_SED }} >> site/high-traffic

          python3 resouces/merge-rules.py rules site
          go run ./ --datapath=site --outputname geosite-lite.dat

      - name: Build sing-box db
        run: |
          wget -q https://github.com/MetaCubeX/geo/releases/download/v1.0/geo-linux-amd64 -O geo
          chmod +x geo
          ./geo convert site -i v2ray -o sing -f geosite-lite.db rules-dat/geosite-lite.dat

      - name: Build sing-box srs
        run: |
          bash rules-dat/resouces/db2srs.sh

      - name: Move files
        run: |
          mkdir -p publish/
          install -Dp rules-dat/geosite-lite.dat publish/
          install -Dp geosite-lite.db publish/
          mv sing publish/

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "Released on ${{ env.BUILDTIME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release
